// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.EF;

namespace api.Migrations
{
    [DbContext(typeof(SCIMContext))]
    [Migration("20190726121254_initialCreate")]
    partial class initialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("api.Models.Group", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("displayName");

                    b.Property<string>("externalId");

                    b.Property<int>("groupType");

                    b.Property<int?>("metaId");

                    b.HasKey("id");

                    b.HasIndex("metaId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("api.Models.Meta", b =>
                {
                    b.Property<int>("metaId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("created");

                    b.Property<DateTime>("lastModified");

                    b.Property<string>("location");

                    b.Property<int>("resourceType");

                    b.HasKey("metaId");

                    b.ToTable("Meta");
                });

            modelBuilder.Entity("api.Models.Name", b =>
                {
                    b.Property<int>("NameId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("familyName");

                    b.Property<string>("givenName");

                    b.HasKey("NameId");

                    b.ToTable("Names");
                });

            modelBuilder.Entity("api.Models.User", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("NameId");

                    b.Property<int>("UserId");

                    b.Property<short>("active")
                        .HasColumnType("bit");

                    b.Property<string>("externalId");

                    b.Property<string>("userName");

                    b.HasKey("id");

                    b.HasIndex("NameId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("api.Models.email", b =>
                {
                    b.Property<int>("EmailId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Userid");

                    b.Property<short>("primary")
                        .HasColumnType("bit");

                    b.Property<string>("type");

                    b.Property<string>("value");

                    b.HasKey("EmailId");

                    b.HasIndex("Userid");

                    b.ToTable("Emails");
                });

            modelBuilder.Entity("api.Models.Group", b =>
                {
                    b.HasOne("api.Models.Meta", "meta")
                        .WithMany()
                        .HasForeignKey("metaId");
                });

            modelBuilder.Entity("api.Models.User", b =>
                {
                    b.HasOne("api.Models.Name", "name")
                        .WithMany()
                        .HasForeignKey("NameId");
                });

            modelBuilder.Entity("api.Models.email", b =>
                {
                    b.HasOne("api.Models.User")
                        .WithMany("emails")
                        .HasForeignKey("Userid");
                });
#pragma warning restore 612, 618
        }
    }
}
